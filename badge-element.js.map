{"version":3,"file":"badge-element.js","sourceRoot":"","sources":["src/badge-element.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAC,UAAU,EAAE,IAAI,EAAE,GAAG,EAAC,MAAM,KAAK,CAAC;AAC1C,OAAO,EAAC,aAAa,EAAE,QAAQ,EAAC,MAAM,mBAAmB,CAAC;AAC1D,OAAO,EAAC,QAAQ,EAAC,MAAM,6BAA6B,CAAC;AACrD,wDAAwD;AACxD,2DAA2D;AAE3D,MAAM,WAAW,GAAG;IAClB,MAAM,EAAE,QAAQ;IAChB,MAAM,EAAE,QAAQ;IAChB,OAAO,EAAE,SAAS;IAClB,OAAO,EAAE,SAAS;IAClB,OAAO,EAAE,SAAS;IAClB,IAAI,EAAE,MAAM;IACZ,IAAI,EAAE,MAAM;IACZ,IAAI,EAAE,MAAM;IACZ,IAAI,EAAE,MAAM;IACZ,IAAI,EAAE,MAAM;IACZ,IAAI,EAAE,MAAM;CACJ,CAAC;AAEX,MAAM,aAAa,GAAG;IACpB,IAAI,EAAE,MAAM;IACZ,OAAO,EAAE,SAAS;CACV,CAAC;AAEX,6BAA6B;AAE7B;;;;GAIG;AAEH,IAAa,KAAK,GAAlB,MAAa,KAAM,SAAQ,UAAU;IAArC;;QAsCE,UAAK,GAAG,WAAW,CAAC,MAAM,CAAC;QAG3B,YAAO,GAAG,aAAa,CAAC,OAAO,CAAC;IAclC,CAAC;IAZU,MAAM;QACb,OAAO,IAAI,CAAA;;gBAEC,QAAQ,CAAC;YACf,CAAC,YAAY,IAAI,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO;YAC5C,CAAC,UAAU,IAAI,CAAC,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK;SACvC,CAAC;;;;KAIL,CAAC;IACJ,CAAC;CACF,CAAA;AAtDiB,YAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAkC1B,CAAA;AAGF;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;oCACE;AAG3B;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;sCACO;AAzCrB,KAAK;IADjB,aAAa,CAAC,eAAe,CAAC;GAClB,KAAK,CAuDjB;SAvDY,KAAK","sourcesContent":["import {LitElement, html, css} from 'lit';\nimport {customElement, property} from 'lit/decorators.js';\nimport {classMap} from 'lit/directives/class-map.js';\n// import {styleMap} from 'lit/directives/style-map.js';\n// import {selectors} from '@defencedigital/design-tokens';\n\nconst BADGE_COLOR = {\n  ACTION: 'action',\n  DANGER: 'danger',\n  NEUTRAL: 'neutral',\n  SUCCESS: 'success',\n  WARNING: 'warning',\n  SUPA: 'supa',\n  SUPB: 'supb',\n  SUPC: 'supc',\n  SUPD: 'supd',\n  SUPE: 'supe',\n  SUPF: 'supf',\n} as const;\n\nconst BADGE_VARIANT = {\n  PILL: 'pill',\n  REGULAR: 'regular',\n} as const;\n\n// const {color} = selectors;\n\n/**\n * A `badge` element.\n *\n * @slot - This element has a slot\n */\n@customElement('badge-element')\nexport class Badge extends LitElement {\n  static override styles = css`\n    :host {\n      display: inline-block;\n      font-family: Arial, Helvetica, sans-serif;\n    }\n\n    span {\n      vertical-align: middle;\n      white-space: nowrap;\n      color: inherit;\n      padding: 0.5rem 0.75rem;\n      border-radius: 2px;\n      font-size: 12px;\n      font-weight: 700;\n    }\n\n    .variant--pill {\n      border-radius: 100px;\n    }\n\n    .color--action {\n      background-color: rgb(221, 244, 255);\n      color: rgb(38, 97, 167);\n    }\n\n    .color--success {\n      background-color: rgb(229, 255, 217);\n      color: rgb(59, 111, 51);\n    }\n\n    .color--warning {\n      background-color: rgb(255, 255, 238);\n      color: rgb(140, 79, 23);\n    }\n  `;\n\n  @property({type: String})\n  color = BADGE_COLOR.ACTION;\n\n  @property({type: String})\n  variant = BADGE_VARIANT.REGULAR;\n\n  override render() {\n    return html`\n      <span\n        class=${classMap({\n          [`variant--${this.variant}`]: !!this.variant,\n          [`color--${this.color}`]: !!this.color,\n        })}\n      >\n        <slot></slot>\n      </span>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'badge-element': Badge;\n  }\n}\n"]}