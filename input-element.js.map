{"version":3,"file":"input-element.js","sourceRoot":"","sources":["src/input-element.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAC,UAAU,EAAE,IAAI,EAAE,GAAG,EAAC,MAAM,KAAK,CAAC;AAC1C,OAAO,EAAC,aAAa,EAAE,QAAQ,EAAC,MAAM,mBAAmB,CAAC;AAC1D,wDAAwD;AACxD,wDAAwD;AACxD,2DAA2D;AAE3D,6BAA6B;AAE7B;;;GAGG;AAEH,IAAa,KAAK,GAAlB,MAAa,KAAM,SAAQ,UAAU;IAArC;;QA2CE,WAAM,GAAG,EAAE,CAAC;QAGZ,UAAK,GAAG,EAAE,CAAC;QAGX,gBAAW,GAAG,EAAE,CAAC;IAyCnB,CAAC;IAvCU,MAAM;QACb,OAAO,IAAI,CAAA;;;uBAGQ,IAAI,CAAC,WAAW;kBACrB,IAAI,CAAC,QAAQ;iBACd,IAAI,CAAC,OAAO;;KAExB,CAAC;IACJ,CAAC;IAEQ,YAAY;;QACnB,uCAAuC;QACvC,IAAI,CAAC,MAAM,GAAG,MAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,UAAU,0CAAE,aAAa,CAAC,OAAO,CAAW,CAAC;IACnE,CAAC;IAED,QAAQ,CAAC,MAAqB;QAC5B,IAAI,CAAC,aAAa,CAChB,IAAI,WAAW,CAAC,aAAa,EAAE;YAC7B,MAAM,EAAE;gBACN,KAAK,EAAG,IAAI,CAAC,MAA2B,CAAC,KAAK;aAC/C;YACD,QAAQ,EAAE,IAAI;YACd,OAAO,EAAE,IAAI;SACd,CAAC,CACH,CAAC;IACJ,CAAC;IAED,OAAO,CAAC,MAAa;QACnB,IAAI,CAAC,aAAa,CAChB,IAAI,WAAW,CAAC,YAAY,EAAE;YAC5B,MAAM,EAAE;gBACN,KAAK,EAAG,IAAI,CAAC,MAA2B,CAAC,KAAK;aAC/C;YACD,QAAQ,EAAE,IAAI;YACd,OAAO,EAAE,IAAI;SACd,CAAC,CACH,CAAC;IACJ,CAAC;CACF,CAAA;AAzFiB,YAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAuC1B,CAAA;AAGF;IADC,QAAQ,EAAE,CAAC,yDAAyD;qCACzD;AAGZ;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;oCACd;AAGX;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;0CACR;AAjDN,KAAK;IADjB,aAAa,CAAC,eAAe,CAAC;GAClB,KAAK,CA0FjB;SA1FY,KAAK","sourcesContent":["import {LitElement, html, css} from 'lit';\nimport {customElement, property} from 'lit/decorators.js';\n// import {classMap} from 'lit/directives/class-map.js';\n// import {styleMap} from 'lit/directives/style-map.js';\n// import {selectors} from '@defencedigital/design-tokens';\n\n// const {color} = selectors;\n\n/**\n * A `input` element.\n *\n */\n@customElement('input-element')\nexport class Input extends LitElement {\n  static override styles = css`\n    * {\n      box-sizing: border-box;\n    }\n\n    :host {\n      display: inline-block;\n      position: relative;\n      font-family: Arial, Helvetica, sans-serif;\n    }\n\n    input {\n      width: var(--input-width, 250px);\n      height: var(--input-height, 30px);\n      padding: 5px;\n      border: 1px solid rgb(184, 199, 210);\n      background-color: white;\n      font-size: var(--input-font-size, calc(var(--input-height) / 1.8));\n      color: inherit;\n      border-radius: 12px;\n    }\n\n    input:focus {\n      border: 1px solid rgb(58, 143, 221);\n      box-shadow: rgb(221, 244, 255) 0px 0px 0px 6px;\n    }\n\n    :host([text-right]) > input {\n      text-align: right;\n    }\n    :host([text-left]) > input {\n      text-align: left;\n    }\n\n    ::-ms-input-placeholder,\n    :-ms-input-placeholder,\n    ::placeholder {\n      color: #a0a0a0;\n    }\n  `;\n\n  @property() // `@internalProperty` decorator missing from exports? :(\n  _input = {};\n\n  @property({type: String})\n  value = '';\n\n  @property({type: String})\n  placeHolder = '';\n\n  override render() {\n    return html`\n      <input\n        type=\"text\"\n        placeholder=\"${this.placeHolder}\"\n        @keyup=\"${this._onKeyUp}\"\n        @blur=\"${this._onBlur}\"\n      />\n    `;\n  }\n\n  override firstUpdated() {\n    // Save input reference for performance\n    this._input = this?.shadowRoot?.querySelector('input') as Object;\n  }\n\n  _onKeyUp(_event: KeyboardEvent) {\n    this.dispatchEvent(\n      new CustomEvent('key-pressed', {\n        detail: {\n          value: (this._input as HTMLInputElement).value,\n        },\n        composed: true,\n        bubbles: true,\n      })\n    );\n  }\n\n  _onBlur(_event: Event) {\n    this.dispatchEvent(\n      new CustomEvent('focus-lost', {\n        detail: {\n          value: (this._input as HTMLInputElement).value,\n        },\n        composed: true,\n        bubbles: true,\n      })\n    );\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'input-element': Input;\n  }\n}\n"]}